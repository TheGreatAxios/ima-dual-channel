{
  "address": "0xC53a57Cf2502e161f2923F97f425342e992c9Eb1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_calypsoTarget",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_targetChainName",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "TARGET_CHAIN_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "calypsoTarget",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "originToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "targetToken",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "bringBack",
              "type": "bool"
            }
          ],
          "internalType": "struct Types.MintRequest",
          "name": "data",
          "type": "tuple"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x50b77f9dedfc4139e71808b1dc492e8f99fe89d3cc7608f540e24b28b821ed0e",
  "receipt": {
    "to": "0x0000000000000000000000000000000000000000",
    "from": "0x2c20Ef3fc0248FCA2DC57bcb202F2CAe504A9A66",
    "contractAddress": "0xC53a57Cf2502e161f2923F97f425342e992c9Eb1",
    "transactionIndex": 0,
    "gasUsed": "418948",
    "logsBloom": "0x
    "blockHash": "0x4c30e1c2e1d51b466c0ca4fcb6f6360e76a2f0a77b51fcbea896ec917643ee90",
    "transactionHash": "0x50b77f9dedfc4139e71808b1dc492e8f99fe89d3cc7608f540e24b28b821ed0e",
    "logs": [],
    "blockNumber": 750170,
    "cumulativeGasUsed": "418948",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xbf67EC14Ed9a460e1a8dDE1D567e13C93dE43530",
    "staging-utter-unripe-menkar"
  ],
  "numDeployments": 10,
  "solcInputHash": "6414aef7708b54ad3c593e7c733e9066",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_calypsoTarget\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_targetChainName\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"TARGET_CHAIN_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calypsoTarget\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"originToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"targetToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"bringBack\",\"type\":\"bool\"}],\"internalType\":\"struct Types.MintRequest\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Sawyer Cutler\",\"details\":\"This contract will POST messages to a standard proxy on another chain, in this case the Calypso NFT Hub\",\"kind\":\"dev\",\"methods\":{},\"title\":\"In Game Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This is an example contract of a couple of different functions that can enable NFTs to be \\\"crafted\\\", \\\"found\\\", etc as representation of an on-chain game\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InGameContract.sol\":\"InGameContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@skalenetwork/ima-interfaces/IMessageProxy.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\n\\n/**\\n *   IMessageProxy.sol - SKALE Interchain Messaging Agent\\n *   Copyright (C) 2021-Present SKALE Labs\\n *   @author Dmytro Stebaiev\\n *\\n *   SKALE IMA is free software: you can redistribute it and/or modify\\n *   it under the terms of the GNU Affero General Public License as published\\n *   by the Free Software Foundation, either version 3 of the License, or\\n *   (at your option) any later version.\\n *\\n *   SKALE IMA is distributed in the hope that it will be useful,\\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *   GNU Affero General Public License for more details.\\n *\\n *   You should have received a copy of the GNU Affero General Public License\\n *   along with SKALE IMA.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\npragma solidity >=0.6.10 <0.9.0;\\n\\n\\ninterface IMessageProxy {\\n\\n    /**\\n     * @dev Structure that describes message. Should contain sender of message,\\n     * destination contract on schain that will receiver message,\\n     * data that contains all needed info about token or ETH.\\n     */\\n    struct Message {\\n        address sender;\\n        address destinationContract;\\n        bytes data;\\n    }\\n\\n    /**\\n     * @dev Structure that contains fields for bls signature.\\n     */\\n    struct Signature {\\n        uint256[2] blsSignature;\\n        uint256 hashA;\\n        uint256 hashB;\\n        uint256 counter;\\n    }\\n\\n    function addConnectedChain(string calldata schainName) external;\\n    function postIncomingMessages(\\n        string calldata fromSchainName,\\n        uint256 startingCounter,\\n        Message[] calldata messages,\\n        Signature calldata sign\\n    ) external;\\n    function setNewGasLimit(uint256 newGasLimit) external;\\n    function registerExtraContractForAll(address extraContract) external;\\n    function removeExtraContractForAll(address extraContract) external;    \\n    function removeConnectedChain(string memory schainName) external;\\n    function postOutgoingMessage(\\n        bytes32 targetChainHash,\\n        address targetContract,\\n        bytes memory data\\n    ) external;\\n    function registerExtraContract(string memory chainName, address extraContract) external;\\n    function removeExtraContract(string memory schainName, address extraContract) external;\\n    function setVersion(string calldata newVersion) external;\\n    function isContractRegistered(\\n        bytes32 schainHash,\\n        address contractAddress\\n    ) external view returns (bool);\\n    function getContractRegisteredLength(bytes32 schainHash) external view returns (uint256);\\n    function getContractRegisteredRange(\\n        bytes32 schainHash,\\n        uint256 from,\\n        uint256 to\\n    )\\n        external\\n        view\\n        returns (address[] memory);\\n    function getOutgoingMessagesCounter(string calldata targetSchainName) external view returns (uint256);\\n    function getIncomingMessagesCounter(string calldata fromSchainName) external view returns (uint256);\\n    function isConnectedChain(string memory schainName) external view returns (bool);\\n}\",\"keccak256\":\"0x823cc589786dd1e9fe0ed6a3600435323d7f72050073b79996f35ce4ff341ffa\",\"license\":\"AGPL-3.0-only\"},\"@skalenetwork/ima-interfaces/schain/IKeyStorage.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\n\\n/**\\n *   IKeyStorage.sol - SKALE Interchain Messaging Agent\\n *   Copyright (C) 2021-Present SKALE Labs\\n *   @author Dmytro Stebaiev\\n *\\n *   SKALE IMA is free software: you can redistribute it and/or modify\\n *   it under the terms of the GNU Affero General Public License as published\\n *   by the Free Software Foundation, either version 3 of the License, or\\n *   (at your option) any later version.\\n *\\n *   SKALE IMA is distributed in the hope that it will be useful,\\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *   GNU Affero General Public License for more details.\\n *\\n *   You should have received a copy of the GNU Affero General Public License\\n *   along with SKALE IMA.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\npragma solidity >=0.6.10 <0.9.0;\\n\\nimport \\\"./bls/IFieldOperations.sol\\\";\\n\\n\\ninterface IKeyStorage {\\n    function initialize() external;\\n    function getBlsCommonPublicKey() external view returns (IFieldOperations.G2Point memory);\\n}\",\"keccak256\":\"0x7adff976acf5f27d626ae855d9cd47ede84eeaf8f5877e2f3f04ba040ccfa393\",\"license\":\"AGPL-3.0-only\"},\"@skalenetwork/ima-interfaces/schain/IMessageProxyForSchain.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\n\\n/**\\n *   IMessageProxyForSchain.sol - SKALE Interchain Messaging Agent\\n *   Copyright (C) 2021-Present SKALE Labs\\n *   @author Dmytro Stebaiev\\n *\\n *   SKALE IMA is free software: you can redistribute it and/or modify\\n *   it under the terms of the GNU Affero General Public License as published\\n *   by the Free Software Foundation, either version 3 of the License, or\\n *   (at your option) any later version.\\n *\\n *   SKALE IMA is distributed in the hope that it will be useful,\\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *   GNU Affero General Public License for more details.\\n *\\n *   You should have received a copy of the GNU Affero General Public License\\n *   along with SKALE IMA.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\npragma solidity >=0.6.10 <0.9.0;\\n\\nimport \\\"../IMessageProxy.sol\\\";\\nimport \\\"./IKeyStorage.sol\\\";\\n\\ninterface IMessageProxyForSchain is IMessageProxy {\\n    struct OutgoingMessageData {\\n        bytes32 dstChainHash; // destination chain\\n        uint256 msgCounter; // message counter\\n        address srcContract; // origin\\n        address dstContract; // receiver\\n        bytes data; // payload\\n    }\\n\\n    function initialize(IKeyStorage blsKeyStorage, string memory schainName) external;\\n    function verifyOutgoingMessageData(OutgoingMessageData memory message) external view returns (bool);\\n    function verifySignature(bytes32 hashedMessage, Signature memory signature) external view returns (bool);\\n    function messageInProgress() external view returns (bool);\\n}\",\"keccak256\":\"0x854517e9c5277d42d3d329fa46e6d8e8268dba1d86d572cffdc63fa2a0d1f7dc\",\"license\":\"AGPL-3.0-only\"},\"@skalenetwork/ima-interfaces/schain/bls/IFieldOperations.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\n\\n/**\\n *   IFieldOperations.sol - SKALE Interchain Messaging Agent\\n *   Copyright (C) 2021-Present SKALE Labs\\n *   @author Dmytro Stebaiev\\n *\\n *   SKALE IMA is free software: you can redistribute it and/or modify\\n *   it under the terms of the GNU Affero General Public License as published\\n *   by the Free Software Foundation, either version 3 of the License, or\\n *   (at your option) any later version.\\n *\\n *   SKALE IMA is distributed in the hope that it will be useful,\\n *   but WITHOUT ANY WARRANTY; without even the implied warranty of\\n *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n *   GNU Affero General Public License for more details.\\n *\\n *   You should have received a copy of the GNU Affero General Public License\\n *   along with SKALE IMA.  If not, see <https://www.gnu.org/licenses/>.\\n */\\n\\npragma solidity >=0.6.10 <0.9.0;\\n\\n\\ninterface IFieldOperations {\\n\\n    /**\\n     * @dev Structure that represents the field element { a + ib }\\n     */\\n    struct Fp2Point {\\n        uint a;\\n        uint b;\\n    }\\n\\n    /**\\n     * @dev Structure that represents an element of G2\\n     */\\n    struct G2Point {\\n        Fp2Point x;\\n        Fp2Point y;\\n    }\\n}\",\"keccak256\":\"0xc1c9fa7c776fbdda7f2999fcb8eae36c59e465989829727a5a8fc1de2781dea7\",\"license\":\"AGPL-3.0-only\"},\"contracts/InGameContract.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"./lib/Types.sol\\\";\\nimport \\\"@skalenetwork/ima-interfaces/schain/IMessageProxyForSchain.sol\\\";\\n\\n/// @title In Game Contract\\n/// @author Sawyer Cutler\\n/// @notice This is an example contract of a couple of different functions that can enable NFTs to be \\\"crafted\\\", \\\"found\\\", etc as representation of an on-chain game\\n/// @dev This contract will POST messages to a standard proxy on another chain, in this case the Calypso NFT Hub\\ncontract InGameContract {\\n\\n    IMessageProxyForSchain proxy;\\n    address public calypsoTarget;\\n\\n    bytes32 public immutable TARGET_CHAIN_HASH;\\n    \\n    constructor(\\n        address _calypsoTarget,\\n        string memory _targetChainName\\n    ) {\\n        proxy = IMessageProxyForSchain(0xd2AAa00100000000000000000000000000000000);\\n        calypsoTarget = _calypsoTarget;\\n        TARGET_CHAIN_HASH = keccak256(abi.encodePacked(_targetChainName));\\n    }\\n\\n    function claim(Types.MintRequest memory data) public {\\n        proxy.postOutgoingMessage(\\n            TARGET_CHAIN_HASH,\\n            calypsoTarget,\\n            abi.encode(data)\\n        );\\n    }\\n}\",\"keccak256\":\"0x17ecd07c55c8d3ee94514386f5747d6f3b382635843e98c1a88a9016a2cc4c01\",\"license\":\"MIT\"},\"contracts/lib/Types.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ninterface Types {\\n\\n    struct MintRequest {\\n        address to;\\n        address originToken;\\n        address targetToken;\\n        bool bringBack;\\n    }\\n\\n    struct MintResponse {\\n        address to;\\n        uint256 tokenId;\\n        string tokenURI;\\n    }\\n}\",\"keccak256\":\"0x11175b502f9d6336a7db5fb3a9f38448d53bc4b989f331dfb754915cd2cc38c8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200097f3803806200097f8339818101604052810190620000379190620002fc565b73d2aaa001000000000000000000000000000000006000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080604051602001620000df9190620003af565b60405160208183030381529060405280519060200120608081815250505050620003c8565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001458262000118565b9050919050565b620001578162000138565b81146200016357600080fd5b50565b60008151905062000177816200014c565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001d28262000187565b810181811067ffffffffffffffff82111715620001f457620001f362000198565b5b80604052505050565b60006200020962000104565b9050620002178282620001c7565b919050565b600067ffffffffffffffff8211156200023a576200023962000198565b5b620002458262000187565b9050602081019050919050565b60005b838110156200027257808201518184015260208101905062000255565b60008484015250505050565b6000620002956200028f846200021c565b620001fd565b905082815260208101848484011115620002b457620002b362000182565b5b620002c184828562000252565b509392505050565b600082601f830112620002e157620002e06200017d565b5b8151620002f38482602086016200027e565b91505092915050565b600080604083850312156200031657620003156200010e565b5b6000620003268582860162000166565b925050602083015167ffffffffffffffff8111156200034a576200034962000113565b5b6200035885828601620002c9565b9150509250929050565b600081519050919050565b600081905092915050565b6000620003858262000362565b6200039181856200036d565b9350620003a381856020860162000252565b80840191505092915050565b6000620003bd828462000378565b915081905092915050565b608051610595620003ea6000396000818160dc015261019301526105956000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634fab0ee3146100465780638dead66a14610062578063c190f2e714610080575b600080fd5b610060600480360381019061005b9190610389565b61009e565b005b61006a610191565b60405161007791906103cf565b60405180910390f35b6100886101b5565b60405161009591906103f9565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663944892027f0000000000000000000000000000000000000000000000000000000000000000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460405160200161012f9190610487565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161015c93929190610521565b600060405180830381600087803b15801561017657600080fd5b505af115801561018a573d6000803e3d6000fd5b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610238826101ef565b810181811067ffffffffffffffff8211171561025757610256610200565b5b80604052505050565b600061026a6101db565b9050610276828261022f565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102a68261027b565b9050919050565b6102b68161029b565b81146102c157600080fd5b50565b6000813590506102d3816102ad565b92915050565b60008115159050919050565b6102ee816102d9565b81146102f957600080fd5b50565b60008135905061030b816102e5565b92915050565b600060808284031215610327576103266101ea565b5b6103316080610260565b90506000610341848285016102c4565b6000830152506020610355848285016102c4565b6020830152506040610369848285016102c4565b604083015250606061037d848285016102fc565b60608301525092915050565b60006080828403121561039f5761039e6101e5565b5b60006103ad84828501610311565b91505092915050565b6000819050919050565b6103c9816103b6565b82525050565b60006020820190506103e460008301846103c0565b92915050565b6103f38161029b565b82525050565b600060208201905061040e60008301846103ea565b92915050565b61041d8161029b565b82525050565b61042c816102d9565b82525050565b6080820160008201516104486000850182610414565b50602082015161045b6020850182610414565b50604082015161046e6040850182610414565b5060608201516104816060850182610423565b50505050565b600060808201905061049c6000830184610432565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156104dc5780820151818401526020810190506104c1565b60008484015250505050565b60006104f3826104a2565b6104fd81856104ad565b935061050d8185602086016104be565b610516816101ef565b840191505092915050565b600060608201905061053660008301866103c0565b61054360208301856103ea565b818103604083015261055581846104e8565b905094935050505056fea26469706673582212208289f742208ca35d4520b8ca6c2e762e45296563619133108ceca9d85382627264736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80634fab0ee3146100465780638dead66a14610062578063c190f2e714610080575b600080fd5b610060600480360381019061005b9190610389565b61009e565b005b61006a610191565b60405161007791906103cf565b60405180910390f35b6100886101b5565b60405161009591906103f9565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663944892027f0000000000000000000000000000000000000000000000000000000000000000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460405160200161012f9190610487565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161015c93929190610521565b600060405180830381600087803b15801561017657600080fd5b505af115801561018a573d6000803e3d6000fd5b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000604051905090565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610238826101ef565b810181811067ffffffffffffffff8211171561025757610256610200565b5b80604052505050565b600061026a6101db565b9050610276828261022f565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102a68261027b565b9050919050565b6102b68161029b565b81146102c157600080fd5b50565b6000813590506102d3816102ad565b92915050565b60008115159050919050565b6102ee816102d9565b81146102f957600080fd5b50565b60008135905061030b816102e5565b92915050565b600060808284031215610327576103266101ea565b5b6103316080610260565b90506000610341848285016102c4565b6000830152506020610355848285016102c4565b6020830152506040610369848285016102c4565b604083015250606061037d848285016102fc565b60608301525092915050565b60006080828403121561039f5761039e6101e5565b5b60006103ad84828501610311565b91505092915050565b6000819050919050565b6103c9816103b6565b82525050565b60006020820190506103e460008301846103c0565b92915050565b6103f38161029b565b82525050565b600060208201905061040e60008301846103ea565b92915050565b61041d8161029b565b82525050565b61042c816102d9565b82525050565b6080820160008201516104486000850182610414565b50602082015161045b6020850182610414565b50604082015161046e6040850182610414565b5060608201516104816060850182610423565b50505050565b600060808201905061049c6000830184610432565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156104dc5780820151818401526020810190506104c1565b60008484015250505050565b60006104f3826104a2565b6104fd81856104ad565b935061050d8185602086016104be565b610516816101ef565b840191505092915050565b600060608201905061053660008301866103c0565b61054360208301856103ea565b818103604083015261055581846104e8565b905094935050505056fea26469706673582212208289f742208ca35d4520b8ca6c2e762e45296563619133108ceca9d85382627264736f6c63430008110033",
  "devdoc": {
    "author": "Sawyer Cutler",
    "details": "This contract will POST messages to a standard proxy on another chain, in this case the Calypso NFT Hub",
    "kind": "dev",
    "methods": {},
    "title": "In Game Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This is an example contract of a couple of different functions that can enable NFTs to be \"crafted\", \"found\", etc as representation of an on-chain game",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4290,
        "contract": "contracts/InGameContract.sol:InGameContract",
        "label": "proxy",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IMessageProxyForSchain)4083"
      },
      {
        "astId": 4292,
        "contract": "contracts/InGameContract.sol:InGameContract",
        "label": "calypsoTarget",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IMessageProxyForSchain)4083": {
        "encoding": "inplace",
        "label": "contract IMessageProxyForSchain",
        "numberOfBytes": "20"
      }
    }
  }
}